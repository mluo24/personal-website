{"data":{"allMdx":{"nodes":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Smite Discord Bot\",\n  \"githubLink\": \"https://github.com/pdan101/smite-discord-bot\",\n  \"technologies\": [\"JavaScript\", \"Discord.js\"],\n  \"year\": \"2022-02\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is my latest project, and it is a Discord bot that utilizes the public API of \", mdx(Link, {\n    href: \"https://www.smitegame.com/\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"Smite\"), \", a free-to-play cross platform MOBA.\\nThe features are currently still in development, but our goal is to include player data lookup and game mechanic lookups (gods, items, relics, etc), perfect for a Smite-oriented Discord server.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"0316328c-0c5d-5b78-8241-b0ff1549520c","frontmatter":{"githubLink":"https://github.com/pdan101/smite-discord-bot","year":"2022","link":null,"technologies":["JavaScript","Discord.js"],"title":"Smite Discord Bot"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Zing/Zing-LSC\",\n  \"githubLink\": \"https://github.com/cornell-dti/zing\",\n  \"technologies\": [\"TypeScript\", \"React\", \"Node.js\", \"Express\", \"Firebase\"],\n  \"year\": \"2022-01\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is my subteam on DTI, and what I have been focused on since joining DTI in Fall 2021. \\\"Zing\\\" is actually comprised of two products:\\n\\\"Zing\\\", which intelligently groups students, and Zing-LSC, which the Learning Strategies Center uses to pair students with study buddies.\"), mdx(\"p\", null, \"Some features I have implemented include a match button in connection to the backend API for Zing-LSC, a group \\\"export to CSV button\\\" for Zing,\\nand upgrades to the MUI version and the React component library for both sides.\"), mdx(\"p\", null, \"Zing-LSC can be found \", mdx(Link, {\n    href: \"https://github.com/cornell-dti/zing-lsc\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"f67842a2-3c1d-5814-9281-f10436e615b5","frontmatter":{"githubLink":"https://github.com/cornell-dti/zing","year":"2022","link":null,"technologies":["TypeScript","React","Node.js","Express","Firebase"],"title":"Zing/Zing-LSC"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BeOnTime\",\n  \"githubLink\": \"https://github.com/mluo24/beontime\",\n  \"technologies\": [\"Python\", \"Flask\"],\n  \"year\": \"2021-05\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This mobile app was made for the \", mdx(Link, {\n    href: \"https://www.cornellappdev.com/courses/hack-challenge\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"AppDev Hack Challenge\"), \".\\nIts purpose is for Cornell students to keep track of their courses and their respective assignments/tasks to simplify Canvas calendar and give more information than other traditional todo apps.\"), mdx(\"p\", null, \"I worked on the backend, an API made with Flask and the SQLAlchemy ORM, which offers authentication via Bearer token, various endpoints to add courses/assignments/tasks,\\nand utilizes the \", mdx(Link, {\n    href: \"https://classes.cornell.edu/content/SP22/api-details\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"Cornell Course Roster API\"), \" to get all the up-to-date courses for the semester.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"786a74eb-3092-514f-8110-83cc7d282719","frontmatter":{"githubLink":"https://github.com/mluo24/beontime","year":"2021","link":null,"technologies":["Python","Flask"],"title":"BeOnTime"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Projectry\",\n  \"githubLink\": \"https://github.com/mluo24/projectry\",\n  \"technologies\": [\"TypeScript\", \"Node.js\", \"Express\", \"React\", \"Firebase\"],\n  \"year\": \"2021-05\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This was the final project for the course \", mdx(Link, {\n    href: \"https://webdev.cornelldti.org/\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"Trends in Web Development\"), \".\"), mdx(\"p\", null, \"The purpose of this project is for people who want to make rather short-term personal projects and need to enlist other people to help them. This was my first project using the Node, Express, React, and NoSQL stack, and the repo is a monorepo taking advantage of yarn workspaces and using the same packages.\\nPlanned features include a chat and user rating system.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"8c6bf5d9-80fa-5d8b-a525-f2a7f2ebe5ab","frontmatter":{"githubLink":"https://github.com/mluo24/projectry","year":"2021","link":null,"technologies":["TypeScript","Node.js","Express","React","Firebase"],"title":"Projectry"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Cornell Simulator\",\n  \"githubLink\": \"https://github.com/mluo24/CornellSimulator\",\n  \"technologies\": [\"OCaml\"],\n  \"year\": \"2021-04\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This was my final project for CS 3110: Functional Programming. The original game idea was for a Stardew Valley-esque game of a life simulator passing through each day doing tasks, but with the life of a Cornell student.\"), mdx(\"p\", null, \"We used the OCaml graphics library and camlimages to create a robust tile/map engine to generate maps from spritesheets with a JSON, as well as layers for collision/interaction of items/map warps. Instead of passing time, we had a limited step counter and calculated a \\\"GPA\\\" at the end based on actions performed in the game.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"dd6c53f9-55a3-5adc-b2d7-b7b364e7fdc3","frontmatter":{"githubLink":"https://github.com/mluo24/CornellSimulator","year":"2021","link":null,"technologies":["OCaml"],"title":"Cornell Simulator"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sharefolio\",\n  \"githubLink\": \"https://github.com/mluo24/sharefolio\",\n  \"technologies\": [\"Python\", \"Django\", \"TypeScript\", \"React\"],\n  \"year\": \"2020-03\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This project started off as making a Wattpad-esque app, but it has now changed to focusing on sharing creative works in general (a portfolio) and the community providing constructive feedback.\\nThe idea was partially inspired by how I would frequently create works where I feel I would benefit receiving feedback.\"), mdx(\"p\", null, \"Currently, the app supports chaptered fiction, which provided interesting insights into database model relations, as well as other ideas like \\\"liking,\\\" bookmarking, word count, WSYIWYG editors, comments, and tagging.\\nAs of 2021, I have extended it to use Django Rest Framework and making the \", mdx(Link, {\n    href: \"https://github.com/mluo24/sharefolio-frontend\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"frontend\"), \" in React.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"39e069e5-982f-55a6-b549-9aa6d68f4c72","frontmatter":{"githubLink":"https://github.com/mluo24/sharefolio","year":"2020","link":null,"technologies":["Python","Django","TypeScript","React"],"title":"Sharefolio"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FRC Scouting Server\",\n  \"githubLink\": \"https://github.com/mluo24/pascack-pioneers-scouting-2020\",\n  \"link\": \"https://team1676.com/scouting/\",\n  \"technologies\": [\"PHP\", \"Laravel\", \"JavaScript\"],\n  \"year\": \"2020-01\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This has been ongoing throughout high school (2016-2020), with each iteration improving from before and changing the fields for the game,\\ndeveloped for my school's robotics team, \", mdx(Link, {\n    href: \"https://team1676.com/\",\n    underline: \"hover\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"Team 1676: The Pascack Pi-Oneers\"), \", for team members to record\\ninformation on robots and analyze it for strategic purposes. This was my first basis for web development, learning new tech stacks, working on a dev project with a team, leadership, and managing a long-term project.\"), mdx(\"p\", null, \"The 2020 specific version, in terms of technical changes, has a new UI that looks like the game field when rendered for ease of data input when scouting live games.\\nThe data querying was not worked upon due to the pandemic, but previous methods such as team comparisons and simple \", mdx(Link, {\n    href: \"https://datatables.net/\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"DataTables\"), \" views are still possible.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"027df863-5927-537c-96da-0954997de3f8","frontmatter":{"githubLink":"https://github.com/mluo24/pascack-pioneers-scouting-2020","year":"2020","link":"https://team1676.com/scouting/","technologies":["PHP","Laravel","JavaScript"],"title":"FRC Scouting Server"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"TextTwister\",\n  \"githubLink\": \"https://github.com/mluo24/texttwister\",\n  \"technologies\": [\"Java\"],\n  \"year\": \"2019-09\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This project was inspired by \", mdx(Link, {\n    href: \"https://www.wordplays.com/wordgames/text-twist\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"TextTwist\"), \", and was our high school computer science \\\"hackathon\\\" project.\"), mdx(\"p\", null, \"It takes advantage of Java Swing for the UI, which had challenges in making sure the layout could evenly fit all of the subsets of letter boxes, and it has all the features/keybinds of the original TextTwist, including clicking or typing for input,\\ndown arrow for playing the game, etc. Generating all of the subsets of words with the dictionary and updating the state of guessed words was a very interesting challenge.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"eed802fb-43b3-5c37-93fb-0d1ee990737d","frontmatter":{"githubLink":"https://github.com/mluo24/texttwister","year":"2019","link":null,"technologies":["Java"],"title":"TextTwister"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Nuclear Siege\",\n  \"githubLink\": \"https://github.com/mluo24/nuclear-siege\",\n  \"technologies\": [\"Java\"],\n  \"year\": \"2019-05\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This game was my final project for AP Computer Science. The premise is a small shooter to protect a nuclear reactor from monsters.\"), mdx(\"p\", null, \"It was pretty much my first rather complete game, and it taught me a lot with sprites and animations, and I used an Animation class (that essentially utilizes a timer) to animate characters from a spritesheet. I also used the Animation class for implementing \\\"immunity\\\" frames so that constant contact would not automatically deplete the character's health.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"0ea10ce0-c45c-5cb5-ab7e-432042367f5f","frontmatter":{"githubLink":"https://github.com/mluo24/nuclear-siege","year":"2019","link":null,"technologies":["Java"],"title":"Nuclear Siege"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Colorimetric Analysis\",\n  \"githubLink\": \"https://github.com/mluo24/p-colorimetric-analysis\",\n  \"technologies\": [\"Python\"],\n  \"year\": \"2019-01\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This project won an honorable mention in computing awards at the NJ Regional Science Fair. My partner and I wanted to find exact concentrations of solutions without a spectrophotometer using semi-quantitative educational test kits.\"), mdx(\"p\", null, \"We experimented with phosphorus solutions and developed it through generated absorbance curves with a spectrophotometer and smartphone pictures of solutions made with the test kit in a semi-controlled lighting setting,\\nand essentially modeled it with linear regression using Beer-Lambert's law to associate RGB values to absorbance and therefore concentration. Feel free to view our \", mdx(Link, {\n    href: \"https://njrsf.org/cgi-bin/DisplayAbstract.pl?Project=CM.04&Yr=2019\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"abstract\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"781500d1-29c2-5b3e-8e71-61c875d77a1b","frontmatter":{"githubLink":"https://github.com/mluo24/p-colorimetric-analysis","year":"2019","link":null,"technologies":["Python"],"title":"Colorimetric Analysis"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bioinformatics Data\",\n  \"githubLink\": \"https://github.com/mluo24/research\",\n  \"technologies\": [\"HTML/CSS\", \"PHP\", \"MySQL\"],\n  \"year\": \"2018-01\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This was a project meant for data gathering for the research project, \", mdx(\"em\", null, \"Bioinformatics of Kinases to Elucidate the Evolution of Cell Signaling\"), \", to hold data collected from BLAST databases.\\nfor the purpose of tracking cell signaling evolution of many organisms with the protein kinases of an \", mdx(\"em\", null, \"Arabidopsis\"), \" model organism.\"), mdx(\"p\", null, \"It is a CRUD app made with PHP and manually making connections to a database, and all the data can be viewed and exported easily based on what was needed for the graphs at the end of the project.\\nTo view more about this, feel free to read our abstract \", mdx(Link, {\n    href: \"https://njrsf.org/cgi-bin/DisplayAbstract.pl?Project=BI.03&Yr=2018\",\n    target: \"_blank\",\n    mdxType: \"Link\"\n  }, \"abstract\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"32764623-c77a-5b1f-b8f6-6e3fa7ebbdc0","frontmatter":{"githubLink":"https://github.com/mluo24/research","year":"2018","link":null,"technologies":["HTML/CSS","PHP","MySQL"],"title":"Bioinformatics Data"}}]}}}